@model WebUI.Models.Account.Register
@using (Html.BeginRouteForm("Account_Register_POST", FormMethod.Post, new { @class = "form-vertical register-form" }))
{
    @Html.AntiForgeryToken()
    <h3 class="form-title">Sign Up</h3>
    <p>Enter your account details below:</p>
    <div class="control-group">
        @Html.LabelFor(x => x.Username, new { @class = "control-label visible-ie8 visible-ie9" })
        <div class="controls">
            <div class="input-icon left">
                <i class="icon-user"></i>
                @Html.TextBoxFor(x => x.Username, new { @class = "m-wrap placeholder-no-fix", placeholder = "Username" })
            </div>
            @Html.ValidationMessageFor(x => x.Username, "", new { @class = "help-inline help-small no-left-padding" })
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(x => x.Password, new { @class = "control-label visible-ie8 visible-ie9" })
        <div class="controls">
            <div class="input-icon left">
                <i class="icon-lock"></i>
                @Html.PasswordFor(x => x.Password, new { @class = "m-wrap placeholder-no-fix", placeholder = "Password" })
            </div>
            @Html.ValidationMessageFor(x => x.Password, "", new { @class = "help-inline help-small no-left-padding" })
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(x => x.ConfirmPassword, new { @class = "control-label visible-ie8 visible-ie9" })
        <div class="controls">
            <div class="input-icon left">
                <i class="icon-lock"></i>
                @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "m-wrap placeholder-no-fix", placeholder = "Password" })
            </div>
            @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new { @class = "help-inline help-small no-left-padding" })
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(x => x.EmailAddress, new { @class = "control-label visible-ie8 visible-ie9" })
        <div class="controls">
            <div class="input-icon left">
                <i class="icon-lock"></i>
                @Html.PasswordFor(x => x.EmailAddress, new { @class = "m-wrap placeholder-no-fix", placeholder = "Password" })
            </div>
            @Html.ValidationMessageFor(x => x.EmailAddress, "", new { @class = "help-inline help-small no-left-padding" })
        </div>
    </div>
    <div class="form-actions">
        <a href="@Url.RouteUrl("Account_Login")" type="button" class="btn">
            <i class="m-icon-swapleft"></i>
            Login
        </a>
        <button type="submit" class="btn green pull-right">
            Sign Up <i class="m-icon-swapright m-icon-white"></i>
        </button>
    </div>
}